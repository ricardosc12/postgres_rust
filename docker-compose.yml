
services:
  postgres_db:
    image: postgres:16.3-alpine
    container_name: postgres
    restart: always
    command:
      - "postgres"
      - "-c"
      - "shared_buffers=6GB"
      - "-c"
      - "effective_cache_size=18GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "max_connections=300"
      - "-c"
      - "checkpoint_timeout=15min"
      - "-c"
      - "checkpoint_completion_target=0.9"
      - "-c"
      - "wal_buffers=16MB"
      - "-c"
      - "wal_level=replica"
      - "-c"
      - "synchronous_commit=off"
      - "-c"
      - "autovacuum=on"
      - "-c"
      - "autovacuum_max_workers=6"
      - "-c"
      - "autovacuum_naptime=10s"
      - "-c"
      - "autovacuum_vacuum_cost_delay=20ms"
      - "-c"
      - "autovacuum_vacuum_cost_limit=2000"
      - "-c"
      - "max_worker_processes=12"
      - "-c"
      - "max_parallel_workers_per_gather=6"
      - "-c"
      - "max_parallel_workers=12"
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
    # ports:
    #   - 5432:5432
    network_mode: host
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: always
    depends_on:
      - postgres_db
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: 123
    # ports:
    #   - 8080:80
    network_mode: host
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/auth.conf:/etc/nginx/nginx.conf
    network_mode: host
    restart: always

  web_server:
    container_name: server
    build: ./server
    network_mode: host
    restart: always
    depends_on:
      - postgres_db
    environment:
      PORT: 5000

  web_server2:
    container_name: server2
    build: ./server
    network_mode: host
    restart: always
    depends_on:
      - postgres_db
    environment:
      PORT: 5001

  web_server3:
    container_name: server3
    build: ./server
    network_mode: host
    restart: always
    depends_on:
      - postgres_db
    environment:
      PORT: 5002

  web_server4:
    container_name: server4
    build: ./server
    network_mode: host
    restart: always
    depends_on:
      - postgres_db
    environment:
      PORT: 5003

  # node_server:
  #   container_name: node1
  #   build: ./server_js
  #   network_mode: host
  #   restart: always
  #   depends_on:
  #     - postgres_db
  #   environment:
  #     PORT: 5000

  # node_server2:
  #   container_name: node2
  #   build: ./server_js
  #   network_mode: host
  #   restart: always
  #   depends_on:
  #     - postgres_db
  #   environment:
  #     PORT: 5001

volumes:
  postgres_data:
  pgadmin_data: